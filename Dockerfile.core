# Start with the base image of python
FROM python:3.10

# Install Python 3.10
RUN apt-get update && apt-get install -y python3.10

# No .pyc files created
ENV PYTHONDONTWRITEBYTECODE 1

# stdout and stderr sent to terminal
ENV PYTHONUNBUFFERED 1   

# Getting docker and docker dependences as well as the keys to the docker engine running this container
RUN apt-get update
RUN apt-get -y install apt-transport-https ca-certificates curl gnupg2 software-properties-common
RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
RUN add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"

# Set the working directory to /app
WORKDIR /app

# Copy the requirements.txt file to the Docker image
COPY ./ml-pipe-core/requirements.txt .

# Create a virtual environment and activate it
RUN python3 -m venv ./venv/vsem
RUN /bin/bash -c "source ./venv/vsem/bin/activate"

# Install the requirements using pip
RUN pip install -r requirements.txt

# Copy the source code from ./src to the Docker image
COPY ./ml-pipe-core/src .

# Copy the built front end into the container
COPY ./ml-pipe-front/build ./static

# Set the work directory to SRC such that imports work correctly
WORKDIR /app
